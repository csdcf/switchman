	OpenFlow on ProCurve Switches
	-----------------------------

	This file describes how to use the OpenFlow module on the
ProCurve Switch J9088A.

Legal stuff
-----------
	The OpenFlow module is an *EXPERIMENTAL* feature. It was
originally contributed and implemented by HP Labs for the OpenFlow
project.  It is not an official HP Networking product, and is not
supported through normal support channels.

	License and distribution of the HP Networking firmware 
including the OpenFlow module is handled separately from production
firmware for the same product line.

Module status
-------------
	Current OpenFlow version : v1.09g

	The OpenFlow module is included in the ProCurve firmware for
the Switch J9088A (54xxxzl, 82xxxzl, 3500, 6200, 6600).

      Current OpenFlow module has been implemented in
firmware revision K.15.05. Other revisions are not available.

	The OpenFlow module implements OpenFlow version V1.0. Other
versions of OpenFlow are not available.

	The current module has seen limited testing and does not yet
pass the conformance tests. The current implementation has various
limitations.

New in this release
--------------------
      o Support for Version 2 chassis blades (model numbers
        9534, 9535).

      o Support for inclusion of OpenFlow configuration commands
        in the "show config" display.

      o Addition of a "no openflow" configuration negation 
        command.

      o Addition of a "show openflow flows" status display.

      o Addition of a "show openflow rules" status display.

Bugs
----
	o Some part of the OpenFlow V1.0 spec are not fully 
      implemented

To flash the firmware

	The switch has two firmware banks, primary and secondary. We
advise to always keep a tested version of an original HP Networking
firmware in the primary bank, and to only put OpenFlow enabled
firmware in the second bank. At boot, it is possible to select which
firmware to use from the serial console (9600 baud).

	Only HP Networking firmware K.13.58 and later can flash the
OpenFlow enabled firmware, earlier firmware will return an error. We
therefore recommend to use one of those firmwares as primary.

	Firmware upload can be done via the console of the switch,
either on the serial console or via telnet/ssh.

	The OpenFlow enabled firmware needs to be added on a TFTP
server accessible from the switch.

	To flash the OpenFlow enabled firmware :
		> copy tftp flash 10.11.12.1 K_15_05_exp_openflow_1.swi secondary
	To boot the firmware :
		> boot system flash secondary

OpenFlow Configuration
----------------------

	Configuration is mainly done on the switch command line. To
change the configuration, it is necessary to go into configuration
mode. The configuration is part of the switch "running config", and
can be made persistent.

	There are multiple OpenFlow instances, and each instance is
bound to a specific VLAN. Therefore, the configuration of OpenFlow
is done on each separate VLAN.

	To show the Openflow configuration of all VLANs :
		> show openflow
	To show the Openflow configuration for VLAN 10 :
		> show openflow 10
	To enter the configuration mode :
		> configure
	To enable/start Openflow on VLAN 10 :
		> vlan 10 openflow enable
	To disable/stop Openflow on VLAN 10 :
		> vlan 10 openflow disable
	To set the controller :
		> vlan 10 openflow controller tcp:10.11.12.1:975
	To enter the VLAN 10 context and add a passive listener for dpctl :
		> vlan 10
		> openflow listener ptcp:975
	To do everything on one line :
		> vlan 10 openflow controller tcp:10.11.12.1:975 listener ptcp:975 enable
	To save the configuration for the next reboot :
		> write memory

NOTE: Ensure that the VLAN used in the above command is already defined 
(see below on how to create a VLAN or check currently defined VLANs).

    OpenFlow configuration may be removed, without erasing
the entire switch configuration.

   To remove the OpenFlow configuration on VLAN 10:
      > no openflow vlan 10
   To remove OpenFlow configuration on aggregate VLANs:
      > no openflow aggregate_vlans

VLAN configuration
------------------

	Each OpenFlow instance will only act on the traffic within a
specific VLAN. This means that you need to create a VLAN and assign
some traffic to it.

	To display the current VLANS defined :
		> show vlan
	To display the configuration and ports of VLAN 10 :
		> show vlan 10
	To create a VLAN :
		> vlan 10 name openflow
	To add ports to the VLAN :
		> vlan 10 untagged A14,B7
	To remove ports from the VLAN :
		> vlan 1 untagged A14,B7

PORT Configuration
------------------

	To display the port status :
		> show interfaces brief
	To display the port configuration :
		> show interfaces config
	To display the port statistics counters :
		> show interfaces
	To display the port statistics counters interactively :
		> show interfaces display

Aggregation configuration
-------------------------

	Aggregation is the opposite of VLAN virtualization, it enables
a single OpenFlow instance to manage all the VLANs within the
switch.

	Because the OpenFlow control traffic cannot be "in-band", a
specific "Management VLAN" is defined and excluded from aggregation,
in other words the OpenFlow instance manages all VLANs except the
"Management VLAN". The "Management VLAN" can be used for running the
OpenFlow control traffic, but also to access the switch console or
MIB, or for any other purpose.

	The "Configuration VLAN" is only an artifact of the user
interface, it defines which VLAN instance will run the
aggregation. Any VLAN number can be picked, it won't change the
overall behavior of the switch.

	To define VLAN 1 as the Management VLAN :
		> openflow aggregate_vlans management_vlan 1
	To configure an aggregated OpenFlow :
		> openflow aggregate_vlans configuration_vlan 10
		> vlan 10 openflow controller tcp:10.11.12.1:975 listener ptcp:975
		> openflow aggregate_vlans enable
	To enable/start the aggregated OpenFlow :
		> vlan 10 openflow enable

Rate limiters configuration
---------------------------

	The OpenFlow module can be configured with rate limiters to
control OpenFlow experiments and prevent them from consuming the
switch resources. It implement two rate limiters for each instance,
which have different purposes, each instance has completely
independent rate limiters that can be set independently.

	The first rate limiter is the software rate limiter. It
controls the number of packets that each line card can send to the
software path on the CPU. It indirectly controls the number of
packet_in messages sent by the switch to the controller. This rate
limiter is alway enabled and its default value is 100.
	To set the software rate limiter :
		> vlan 10 openflow sw-rate 1000

	The second rate limiter is the hardware rate limiter. It
controls the number of kb/s that each line card can process for the
flows instantiated in hardware, and limit how much hardware bandwidth
that instance can use. This rate limiter is disabled by default, and
can be modified only when the instance is disabled.
	To set the hardware rate limiter :
		> vlan 10 openflow hw-rate 1000000
	To disable the hardware rate limiter :
		> vlan 10 openflow hw-rate 0

Show Configuration
------------------

     OpenFlow configuration may be extracted and saved for later
restoration on the switch (or some other switch) using the 
standard "show config" command.  The OpenFlow related display
will be formatted as follows:

 openflow
   vlan 9
      enable
      controller "tcp:172.22.18.193:6633" listener "ptcp:6633"
      exit
   exit

Show OpenFlow flows
-------------------

    The current (volatile) status of OpenFlow flows may be
displayed using the "show openflow [vlan] <vlan-id> flows"
command.

   To display the OpenFlow flow table for VLAN 9:
      > show openflow vlan 9 flows

The display is formatted as follows:

Flow 1:

 Incoming Port      : 0
 Destination MAC    : 001b21-22edd8     Source MAC         : 001b21-239552
 VLAN ID            : 0                 VLAN Priority      : 0
 Source IP          : 192.16.200.4      Destination IP     : 192.16.200.4
 IP Protocol        : IP                IP ToS bits        : 0
 Source Port        : 0                 Destination Port   : 0
 Duration           : 16s secs          Priority           : 32769
 Idle Timeout       : 0 secs            Hard Timeout       : 0 secs
 Packet Count       : 0                 Bytes Count        : 0
 Actions            : output:23

Show OpenFlow rules
-------------------

   The current (volatile) status of OpenFlow policy engine
rules may be displayed using the "show openflow [vlan] <vlan-id>
rules" command"

   To display the OpenFlow policy engine rules for VLAN 9:
       > show openflow vlan 9 rules

The display is formatted as follows:

Rule 1:

 Source IP           : 192.16.200.4/255.255.255.255
 Destination IP      : 192.168.201.3/255.255.255.255
 VLAN ID             : 9
 Protocol            : 0x0000
 Source UDP/TCP port : 0x0000
 Dest.  UDP/TCP port : 0x0000
 IP ToS bits         : 00:00
 Actions             : Forward to 002

Configuration via SNMP
----------------------
	It is also possible to configure the OpenFlow module via SNMP,
like the rest of the switch configuration. Well, that's assuming your
admin gives you the right for that...
	To show the OpenFlow configuration :
		# snmpwalk -v2c -c public 10.11.12.1 iso.org.dod.internet.private.enterprises.11.2.14.11.5.1.7.1.35

	The OpenFlow MIB is currently organized as follows :
		*.1.1.2.<vlan>  -> Enable(1)/Disable(2)
		*.1.1.3.<vlan>  -> Controller

	To enable OpenFlow on VLAN 10 :
		# snmpset -v2c -c public  10.11.12.1 iso.org.dod.internet.private.enterprises.11.2.14.11.5.1.7.1.35.1.1.2.10 i 1
	To disable Openflow :
		# snmpset -v2c -c public  10.11.12.1 iso.org.dod.internet.private.enterprises.11.2.14.11.5.1.7.1.35.1.1.2.10 i 2

OpenFlow inspection via dpctl
-----------------------------
	If you want to debug your controller or set of rules, you will
need to use dpctl.
	A few examples :
		# dpctl show tcp:10.11.12.1:975
		# dpctl dump-tables tcp:10.11.12.1:975
		# dpctl dump-flows tcp:10.11.12.1:975
		# dpctl dump-ports tcp:10.11.12.1:975

Hardware acceleration rules
---------------------------
	All flows can not be instantiated in hardware. Flows not
instantiated in hardware are processed in software, which is slow.
	For a flow to be instantiated in hardware :
		o The flow must be IP (L2 type == 0x800)
		o The only action is output to a single port or drop

For further information, license requests and firmware image access
requests please contact:

	Mehul Pandya  mehul.pandya@hp.com
